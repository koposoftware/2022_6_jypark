ALTER DATABASE SET TIME_ZONE='Asia/Seoul';
ALTER DATABASE SET TIME_ZONE='+09:00';
ALTER SESSION SET TIME_ZONE='Asia/Seoul';
ALTER SESSION SET TIME_ZONE='+09:00';
SELECT SESSIONTIMEZONE, DBTIMEZONE, LOCALTIMESTAMP, CURRENT_TIMESTAMP, SYSDATE FROM DUAL;

purge recyclebin;

-- 테이블 삭제
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE MEETING_PASSBOOK CASCADE CONSTRAINTS;
DROP TABLE PRTCP_ACCOUNT_INFO CASCADE CONSTRAINTS;
DROP TABLE TRANS_HISTORY CASCADE CONSTRAINTS;
DROP TABLE TVL_PLAN CASCADE CONSTRAINTS;
DROP TABLE CNTRY_CODE CASCADE CONSTRAINTS;
DROP TABLE EXC_RATE CASCADE CONSTRAINTS;
DROP TABLE EXC_WALLET CASCADE CONSTRAINTS;
DROP TABLE HOLD_CURRENCY CASCADE CONSTRAINTS;
DROP TABLE EXC_HISTORY CASCADE CONSTRAINTS;
DROP TABLE SPREAD CASCADE CONSTRAINTS;
DROP TABLE EXC_RESERVATION CASCADE CONSTRAINTS;

-- 시퀀스 삭제
DROP SEQUENCE HISTORY_NO_SEQ;

-- 프로시저 삭제
DROP PROCEDURE TRANSACTION_PROCESS_PROC;
DROP PROCEDURE EXCHANGE_PROCESS_PROC;

-- 회원테이블 생성
CREATE TABLE MEMBER(
    ID          VARCHAR2(20)    PRIMARY KEY,                            -- 아이디
    PASSWORD    VARCHAR2(20)    NOT NULL,                               -- 비밀번호
    NAME        VARCHAR2(20)    NOT NULL,                               -- 이름
    EMAIL       VARCHAR2(30)    NOT NULL UNIQUE,                        -- 이메일주소
    TEL         CHAR    (11)    NOT NULL UNIQUE,                        -- 휴대폰번호형식
    ADDRESS     VARCHAR2(150)   NOT NULL,                               -- 주소
    REG_DATE    DATE            DEFAULT CURRENT_TIMESTAMP               -- 가입일
                                NOT NULL
);

-- 모임통장테이블 생성
CREATE TABLE MEETING_PASSBOOK(
    ACCOUNT_NO      CHAR(14)        PRIMARY KEY,                                        -- 계좌번호
    PASSWORD        CHAR(4)         NOT NULL,                                           -- 계좌비밀번호
    OWNER_ID        VARCHAR2(20)    NOT NULL,                                           -- 계좌소유주아이디
    ACCOUNT_ALIAS   VARCHAR2(30),                                                       -- 계좌별칭
    OPEN_DATE       DATE            DEFAULT CURRENT_TIMESTAMP                           -- 계좌개설날짜
                                    NOT NULL ,
    BALANCE         NUMBER(12)      DEFAULT 0                                           -- 잔액 미입력시 0, 잔액은 0이상의 숫자만 입력
                                    CHECK ( BALANCE >= 0 ),
    EXC_RES_STATUS  CHAR(1)         DEFAULT 'N'
                                    NOT NULL                                            -- 환전예약여부 'Y','N'만 입력
                                    CHECK ( EXC_RES_STATUS IN ('Y', 'N'))
);

-- 모임통장참여회원 테이블
CREATE TABLE PRTCP_ACCOUNT_INFO(
    ID          VARCHAR2(20)    REFERENCES MEMBER(ID)                   -- 아이디  MEMBER.ID 참조
                                NOT NULL,
    ACCOUNT_NO  CHAR(14)        NOT NULL,                                -- 계좌번호 여행통장 테이블의 계좌번호 참조
--                                 REFERENCES MEETING_PASSBOOK(ACCOUNT_NO),
    PRTCP_DATE  DATE            DEFAULT CURRENT_TIMESTAMP
                                NOT NULL,
    CONSTRAINT PRTCP_ACCOUNT_PK PRIMARY KEY (ID, ACCOUNT_NO)            -- 다중컬럼을 기본키로 설정하는 제약조건
);

-- 거래이력 테이블
CREATE TABLE TRANS_HISTORY(
    HISTORY_NO      NUMBER(14)      PRIMARY KEY,                                           -- 거래식별번호 -> HISTORY_NO_SEQ
    ACCOUNT_NO      CHAR(14)        NOT NULL,                                              -- 계좌번호
    TRANS_AMOUNT    NUMBER(12)      NOT NULL,                                              -- 거래금액
    BALANCE         NUMBER(12)      NOT NULL,                                              -- 잔액
    TRANS_MEMO      VARCHAR2(40)    NOT NULL,                                              -- 거래메모
    TRANS_DATE      DATE            DEFAULT CURRENT_TIMESTAMP                              -- 거래일자
                                    NOT NULL,
    TRANS_TYPE      CHAR(1)         CHECK ( TRANS_TYPE IN ('D', 'W'))                      -- 거래구분 입금 : 'D', 원화로 재환전 : 'W'
                                    NOT NULL
);

-- 여행계획 테이블 생성
CREATE TABLE TVL_PLAN(
    ACCOUNT_NO      CHAR(14)     PRIMARY KEY,                             -- 계좌번호 여행통장 테이블의 계좌번호 참조
--                                  REFERENCES MEETING_PASSBOOK(ACCOUNT_NO),
    CNTRY_CODE      CHAR(2)      NOT NULL,                               -- ISO국가코드(영문2자리)
    DEPARTURE_DATE  DATE         NOT NULL,                               -- 여행출발일
    ENTRY_DATE      DATE         NOT NULL,                               -- 여행도착일
    TARGET_AMOUNT   NUMBER(12)   DEFAULT 0                               -- 목표외화총액 0이상의 데이터
                                 CHECK ( TARGET_AMOUNT >= 0 ),
    PRTCP_MEMBER_NUM NUMBER(20)  DEFAULT 1                              -- 여행참여 인원 수
);

-- 코드 테이블 생성
CREATE TABLE CNTRY_CODE(
    CODE      CHAR(2)     PRIMARY KEY,      -- ISO 국가코드(2자리)
    NAME      VARCHAR2(50) NOT NULL         -- 국가명(한글)
);


-- 환율 테이블 생성
CREATE TABLE EXC_RATE(
    CCY_CODE        VARCHAR2(10)     NOT NULL,   -- 통화코드
    BASIC_DATE      DATE        DEFAULT CURRENT_TIMESTAMP  -- 기준일시
                                NOT NULL,
    BUY_EXC_RATE    NUMBER(10,2) NOT NULL,   -- 구매시환율
    SELL_EXC_RATE   NUMBER(10,2) NOT NULL,   -- 판매시환율
    SEND_EXC_RATE   NUMBER(10,2) NOT NULL,   -- 송금보낼때 환율
    REC_EXC_RATE    NUMBER(10,2) NOT NULL,   -- 송금받을때 환율
    BASIC_RATE      NUMBER(10,2) NOT NULL,   -- 매매기준율
    EXCHANGE_RATE   NUMBER(10,5) NOT NULL,   -- 환가료율
    USD_RATE        NUMBER(10,4) NOT NULL,   -- 미화환산율
    CONSTRAINT EXC_RATE_PK PRIMARY KEY (CCY_CODE, BASIC_DATE)     -- 기준일 + 국가코드로 PK 형성
);

-- 환전지갑 테이블 생성
CREATE TABLE EXC_WALLET(
    WALLET_NO       CHAR(14)        PRIMARY KEY,                                 -- 지갑번호
    ACCOUNT_NO      CHAR(14)        NOT NULL,
                                    -- REFERENCES MEETING_PASSBOOK(ACCOUNT_NO),  -- 계좌번호 여행통장의 계좌번호 참조
    ID              VARCHAR2(20)    NOT NULL                                     -- 통장 개설자 아이디
);

-- 우대율 테이블 생성
CREATE TABLE SPREAD(
    CCY_CODE            CHAR(3)     PRIMARY KEY,    -- 통화코드
    CNTRY_NM_KR         VARCHAR2(30),               -- 국가이름_한글
    BASIC_SPREAD_RATE   NUMBER(2)   NOT NULL,       -- 기본우대율
    EVENT_SPREAD_RATE   NUMBER(2),                  -- 이벤트우대율
    EXCHANGE_MIN_AMOUNT NUMBER(7)   NOT NULL,       -- 환전가능 최소금액
    EXCHANGE_MIN_INPUT  NUMBER(7)   NOT NULL,       -- 환전금액 입력단위
    EVENT_S_DATE        DATE        NOT NULL,       -- 이벤트시작날짜
    EVENT_E_DATE        DATE        NOT NULL        -- 이벤트종료날짜
);

-- 보유통화 테이블 생성
CREATE TABLE HOLD_CURRENCY(
    WALLET_NO       CHAR(14),                                       -- 지갑번호
    CCY_CODE        CHAR(3),                                        -- 통화코드
    BALANCE         NUMBER(20)  DEFAULT 0
                                NOT NULL
                                CHECK ( BALANCE >= 0 ),         -- 잔액
    RECEIPT_STATUS  CHAR(1)     DEFAULT 'N',
                                CHECK ( RECEIPT_STATUS IN ('N', 'Y', 'R') ), -- 수령정보 상태 N : -  Y : 원화로 재환전  R : 수령지 등록완료
    CONSTRAINT HOLD_CURRENCY_PK PRIMARY KEY (WALLET_NO, CCY_CODE)   -- 지갑번호 + 통화코드로 PK 형성
);

-- 환전내역 테이블 생성
CREATE TABLE EXC_HISTORY(
    HISTORY_NO        CHAR(15)        PRIMARY KEY,    -- 환전신청번호 0996+ccy_code+년도뒤에2자리+6자리랜덤
    WALLET_NO         CHAR(14)        NOT NULL,
    EXC_DATE          DATE            DEFAULT CURRENT_TIMESTAMP    -- 환전일시
                                      NOT NULL,
    SELL_CCY_CODE     CHAR(3)         NOT NULL,       -- 매도통화코드
    SELL_AMOUNT       NUMBER(12)      NOT NULL,       -- 매도금액
    BUY_CCY_CODE      CHAR(3)         NOT NULL,       -- 매수통화코드
    BUY_AMOUNT        NUMBER(12)      NOT NULL,       -- 매수금액
    APPLN_EXC_RATE    NUMBER(6,2)     NOT NULL,       -- 적용환율
    ID                VARCHAR2(20)    NOT NULL,       -- 거래자아이디
    STATE             CHAR(1)         DEFAULT 'D'     -- 거래상태   'D': 수령점미등록  'W': 원화로 재환전    'C': 배달예약완료
);

-- 환전예약 테이블 생성
CREATE TABLE EXC_RESERVATION(
    RESERVATION_NO      CHAR(15)    PRIMARY KEY,                            -- 예약번호
    ACCOUNT_NO          CHAR(14)    REFERENCES MEETING_PASSBOOK(ACCOUNT_NO) -- 계좌번호 여행통장 테이블의 계좌번호 참조
                                    NOT NULL,
    WALLET_NO           CHAR(14)    NOT NULL,                               -- 지갑번호
    CCY_CODE            CHAR(3)     NOT NULL,                               -- 통화코드
    TARGET_BUY_RATE     NUMBER(6,2) NOT NULL,                               -- 목표 구매 환율
    TARGET_BUY_AMOUNT   NUMBER(12)  CHECK ( TARGET_BUY_AMOUNT >= 0 )        -- 목표 구매 총 수량
                                    NOT NULL,
    EXCHANGE_AMOUNT     NUMBER(12)  DEFAULT 0,                              -- 현재까지 총 환전한 수량
    EXPIRATION_DATE     DATE        NOT NULL,                               -- 예약만료기간
    ALARM               CHAR(1)     DEFAULT 'N'                             -- 알람수신여부 'N': 알람거부 'Y': 알람설정
                                    CHECK ( ALARM IN ('N', 'Y') ),
    STATE               CHAR(1)     DEFAULT 'D'                             -- 예약 상태 'D': 예약진행중  'C': 거래완료
                                    CHECK ( STATE IN ('D', 'C') )
);

-- 거래식별번호 sequence
CREATE SEQUENCE HISTORY_NO_SEQ
    INCREMENT BY 1
    START WITH 1
    MINVALUE 1
    MAXVALUE 999999
    NOCYCLE
    NOCACHE;
update MEETING_PASSBOOK
   set balance = 30000000
 where  OWNER_ID= 'kopo02';
commit;
-- 이체 프로시저
CREATE OR REPLACE PROCEDURE TRANSACTION_PROCESS_PROC (
    P_ACCOUNT_NO      IN VARCHAR2       -- 거래계좌번호
    , P_TRANS_AMOUNT  IN NUMBER         -- 거래금액
    , P_TRANS_MEMO    IN VARCHAR2       -- 거래메모
    , P_TRANS_TYPE    IN VARCHAR2       -- 거래구분
)
    IS
    -- 입/출금 후 계좌잔액
    P_BALANCE NUMBER(12) := 0;
BEGIN
    -- 입금하는 경우
    IF P_TRANS_TYPE = 'D' THEN
        -- 계좌에서 거래금액만큼 잔액 +
        UPDATE MEETING_PASSBOOK
        SET BALANCE = BALANCE + P_TRANS_AMOUNT
        WHERE ACCOUNT_NO = P_ACCOUNT_NO;
    END IF;

    -- 출금하는 경우
    IF P_TRANS_TYPE = 'W' THEN
        -- 계좌에서 거래금액만큼 잔액 -
        UPDATE MEETING_PASSBOOK
        SET BALANCE = BALANCE - P_TRANS_AMOUNT
        WHERE ACCOUNT_NO = P_ACCOUNT_NO;
    END IF;

    -- 거래 후 잔액 확인
        SELECT BALANCE
        INTO P_BALANCE
        FROM MEETING_PASSBOOK
        WHERE ACCOUNT_NO = P_ACCOUNT_NO;

    -- 거래이력 삽입
    INSERT INTO TRANS_HISTORY (HISTORY_NO, ACCOUNT_NO, TRANS_AMOUNT, BALANCE, TRANS_MEMO, TRANS_TYPE) VALUES (HISTORY_NO_SEQ.nextval, P_ACCOUNT_NO, P_TRANS_AMOUNT, P_BALANCE, P_TRANS_MEMO, P_TRANS_TYPE);
    COMMIT;
END;
/

-- 환전 프로시저
CREATE OR REPLACE PROCEDURE EXCHANGE_PROCESS_PROC (
    P_HISTORY_NO          IN VARCHAR2       -- 환전신청번호
    , P_WALLET_NO         IN NUMBER         -- 지갑번호
    , P_SELL_CCY_CODE     IN VARCHAR2       -- 매도통화코드
    , P_SELL_AMOUNT       IN NUMBER         -- 매도금액
    , P_BUY_CCY_CODE      IN VARCHAR2       -- 매수통화코드
    , P_BUY_AMOUNT        IN NUMBER         -- 매수금액
    , P_APPLN_EXC_RATE    IN NUMBER         -- 적용환율
    , P_ID                IN VARCHAR2       -- 거래자 ID
)
    IS
    P_BALANCE NUMBER(12) := 0;
BEGIN
    BEGIN
        IF P_SELL_CCY_CODE = 'KRW' THEN
            SELECT BALANCE
            INTO P_BALANCE
            FROM HOLD_CURRENCY
            WHERE HOLD_CURRENCY.WALLET_NO = P_WALLET_NO
              AND HOLD_CURRENCY.CCY_CODE = P_BUY_CCY_CODE;
        END IF;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN P_BALANCE := NULL;
    END;
    -- 외화를 구매하는 경우
    IF P_SELL_CCY_CODE = 'KRW' THEN
        IF P_BALANCE IS NULL THEN
            INSERT INTO HOLD_CURRENCY (WALLET_NO, CCY_CODE, BALANCE) VALUES (P_WALLET_NO, P_BUY_CCY_CODE, P_BUY_AMOUNT);
        ELSE
            UPDATE HOLD_CURRENCY
            SET BALANCE = BALANCE + P_BUY_AMOUNT
            WHERE HOLD_CURRENCY.WALLET_NO = P_WALLET_NO
              AND HOLD_CURRENCY.CCY_CODE = P_BUY_CCY_CODE;
        END IF;
        -- 거래이력 삽입
        INSERT INTO EXC_HISTORY (HISTORY_NO, WALLET_NO, SELL_CCY_CODE, SELL_AMOUNT, BUY_CCY_CODE, BUY_AMOUNT,
                                 APPLN_EXC_RATE, ID, STATE)
        VALUES (P_HISTORY_NO, P_WALLET_NO, P_SELL_CCY_CODE, P_SELL_AMOUNT, P_BUY_CCY_CODE, P_BUY_AMOUNT, P_APPLN_EXC_RATE, P_ID, 'D');
    END IF;
    COMMIT;

    -- 원화로 재환전하는 경우
    IF P_BUY_CCY_CODE = 'KRW' THEN
        SELECT BALANCE
        INTO P_BALANCE
        FROM HOLD_CURRENCY
        WHERE HOLD_CURRENCY.WALLET_NO = P_WALLET_NO
          AND HOLD_CURRENCY.CCY_CODE = P_SELL_CCY_CODE;

        DELETE FROM HOLD_CURRENCY WHERE CCY_CODE = P_SELL_CCY_CODE;

        UPDATE EXC_HISTORY
           SET STATE = 'W'
         WHERE WALLET_NO = P_WALLET_NO AND BUY_CCY_CODE = P_SELL_CCY_CODE;
    END IF;

    COMMIT;
END;
/

select *
  from EXC_HISTORY;
SELECT *
  FROM PRTCP_ACCOUNT_INFO;
SELECT *
  FROM MEETING_PASSBOOK;
SELECT *
  FROM TRANS_HISTORY;
SELECT *
  FROM MEMBER;
SELECT *
  FROM TVL_PLAN;
SELECT *
  FROM CNTRY_CODE;
SELECT *
  FROM EXC_RATE;
SELECT *
  FROM EXC_WALLET;
SELECT *
  FROM HOLD_CURRENCY;
SELECT *
  FROM SPREAD;
SELECT *
  FROM EXC_HISTORY;
SELECT *
  FROM EXC_RATE;
SELECT *
  FROM EXC_RESERVATION;
DELETE FROM HOLD_CURRENCY WHERE CCY_CODE = 'USD' AND WALLET_NO = '43088568093008';
ROLLBACK ;
COMMIT;

COMMIT;
delete from EXC_RATE where TO_CHAR(BASIC_DATE, 'YYYYMMdd') = 20221012;
rollback;
commit;

SELECT CCY_CODE, TO_CHAR(BASIC_DATE, 'YYYYMMdd'), BASIC_RATE
  FROM EXC_RATE
 WHERE CCY_CODE = 'USD'
   AND TO_CHAR(BASIC_DATE, 'YYYYMMdd') < TO_DATE(20220929, 'YYYYMMdd') AND TO_CHAR(BASIC_DATE, 'YYYYMMdd') > ADD_MONTHS(TO_DATE(20220929, 'YYYYMMdd'), -2)
 ORDER BY BASIC_DATE ASC;

SELECT CCY_CODE, TO_CHAR(BASIC_DATE, 'YYYYMMdd') AS BASIC_DATE, BASIC_RATE
  FROM EXC_RATE
 WHERE CCY_CODE = 'USD'
   AND BASIC_DATE BETWEEN ADD_MONTHS(TO_DATE('20220929', 'YYYYMMdd'), -3) AND TO_DATE('20220929', 'YYYYMMdd')
 ORDER BY BASIC_DATE ASC;

SELECT ROWNUM AS RANKING, T.CODE AS COUNTRYNM, T.COUNT AS COUNT
        FROM (
                 SELECT CNTRY_CODE AS CODE, COUNT(*) AS COUNT
                 FROM TVL_PLAN
                 GROUP BY CNTRY_CODE
                 ORDER BY COUNT DESC
             ) T;

SELECT ROWNUM AS RANKING, T.CODE, T.COUNT
  FROM (
      SELECT CNTRY_CODE AS CODE, count(*) AS COUNT
        FROM TVL_PLAN
       GROUP BY CNTRY_CODE
       ORDER BY COUNT DESC
      ) T;

UPDATE MEETING_PASSBOOK
  SET BALANCE = 4000000
 WHERE OWNER_ID = 'kopo02';
commit;

SELECT *
  FROM PRTCP_ACCOUNT_INFO A INNER JOIN EXC_WALLET W ON A.ACCOUNT_NO = W.ACCOUNT_NO
 WHERE A.ID = 'kopo01';

SELECT *
  FROM PRTCP_ACCOUNT_INFO;

INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AD', '안도라');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AE', '아랍에미리트');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AF', '아프가니스탄');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AG', '앤티가 바부다');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AI', '앵귈라');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AL', '알바니아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AM', '아르메니아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AO', '앙골라');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AQ', '남극');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AR', '아르헨티나');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AS', '아메리칸사모아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AT', '오스트리아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AU', '오스트레일리아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AW', '아루바');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AX', '올란드 제도');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('AZ', '아제르바이잔');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BA', '보스니아 헤르체고비나');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BB', '바베이도스');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BD', '방글라데시');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BE', '벨기에');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BF', '부르키나파소');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BG', '불가리아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BH', '바레인');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BI', '부룬디');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BJ', '베냉');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BL', '생바르텔레미');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BM', '버뮤다');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BN', '브루나이');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BO', '볼리비아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BQ', '보네르섬');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BR', '브라질');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BS', '바하마');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BT', '부탄');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BV', '부베섬');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BW', '보츠와나');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BY', '벨라루스');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('BZ', '벨리즈');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CA', '캐나다');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CC', '코코스 제도');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CD', '콩고 민주 공화국');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CF', '중앙아프리카 공화국');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CG', '콩고 공화국');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CH', '스위스');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CI', '코트디부아르');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CK', '쿡 제도');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CL', '칠레');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CM', '카메룬');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CN', '중국');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CO', '콜롬비아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CR', '코스타리카');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CU', '쿠바');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CV', '카보베르데');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CW', '퀴라소');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CX', '크리스마스섬');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CY', '키프로스');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('CZ', '체코');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('DE', '독일');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('DJ', '지부티');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('DK', '덴마크');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('DM', '도미니카 연방');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('DO', '도미니카 공화국');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('DZ', '알제리');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('EC', '에콰도르');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('EE', '에스토니아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('EG', '이집트');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('EH', '서사하라');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('ER', '에리트레아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('ES', '스페인');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('ET', '에티오피아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('FI', '핀란드');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('FJ', '피지');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('FK', '포클랜드 제도');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('FM', '미크로네시아 연방');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('FO', '페로 제도');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('FR', '프랑스');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GA', '가봉');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GB', '영국');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GD', '그레나다');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GE', '조지아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GF', '프랑스령 기아나');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GG', '건지섬');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GH', '가나');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GI', '지브롤터');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GL', '그린란드');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GM', '감비아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GN', '기니');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GP', '과들루프');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GQ', '적도 기니');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GR', '그리스');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GS', '사우스조지아 사우스샌드위치 제도');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GT', '과테말라');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GU', '괌');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GW', '기니비사우');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('GY', '가이아나');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('HK', '홍콩');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('HM', '허드 맥도널드 제도');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('HN', '온두라스');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('HR', '크로아티아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('HT', '아이티');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('HU', '헝가리');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('ID', '인도네시아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('IE', '아일랜드');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('IL', '이스라엘');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('IM', '맨섬');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('IN', '인도');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('IO', '영국령 인도양 지역');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('IQ', '이라크');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('IR', '이란');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('IS', '아이슬란드');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('IT', '이탈리아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('JE', '저지섬');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('JM', '자메이카');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('JO', '요르단');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('JP', '일본');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('KE', '케냐');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('KG', '키르기스스탄');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('KH', '캄보디아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('KI', '키리바시');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('KM', '코모로');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('KN', '세인트키츠 네비스');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('KP', '조선민주주의인민공화국');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('KR', '대한민국');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('KW', '쿠웨이트');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('KY', '케이맨 제도');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('KZ', '카자흐스탄');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('LA', '라오스');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('LB', '레바논');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('LC', '세인트루시아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('LK', '스리랑카');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('LI', '리히텐슈타인');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('LR', '라이베리아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('LS', '레소토');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('LT', '리투아니아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('LU', '룩셈부르크');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('LV', '라트비아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('LY', '리비아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MA', '모로코');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MC', '모나코');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MD', '몰도바');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('ME', '몬테네그로');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MF', '생마르탱');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MG', '마다가스카르');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MH', '마셜 제도');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MK', '북마케도니아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('ML', '말리');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MM', '미얀마');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MN', '몽골');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MO', '마카오');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MP', '북마리아나 제도');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MQ', '마르티니크');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MR', '모리타니');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MS', '몬트세랫');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MT', '몰타');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MU', '모리셔스');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MV', '몰디브');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MW', '말라위');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MX', '멕시코');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MY', '말레이시아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('MZ', '모잠비크');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('NA', '나미비아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('NC', '누벨칼레도니');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('NE', '니제르');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('NF', '노퍽섬');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('NG', '나이지리아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('NI', '니카라과');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('NL', '네덜란드');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('NO', '노르웨이');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('NP', '네팔');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('NR', '나우루');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('NU', '니우에');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('NZ', '뉴질랜드');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('OM', '오만');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('PA', '파나마');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('PE', '페루');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('PF', '프랑스령 폴리네시아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('PG', '파푸아뉴기니');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('PH', '필리핀');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('PK', '파키스탄');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('PL', '폴란드');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('PM', '생피에르 미클롱');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('PN', '핏케언 제도');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('PR', '푸에르토리코');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('PS', '팔레스타인');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('PT', '포르투갈');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('PW', '팔라우');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('PY', '파라과이');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('QA', '카타르');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('RE', '레위니옹');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('RO', '루마니아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('RS', '세르비아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('RU', '러시아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('RW', '르완다');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SA', '사우디아라비아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SB', '솔로몬 제도');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SC', '세이셸');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SD', '수단');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SE', '스웨덴');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SG', '싱가포르');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SH', '세인트헬레나');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SI', '슬로베니아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SJ', '스발바르 얀마옌');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SK', '슬로바키아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SL', '시에라리온');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SM', '산마리노');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SN', '세네갈');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SO', '소말리아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SR', '수리남');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SS', '남수단');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('ST', '상투메 프린시페');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SV', '엘살바도르');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SX', '신트마르턴');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SY', '시리아');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('SZ', '에스와티니');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('US', '미국');
INSERT INTO CNTRY_CODE (CODE, NAME) VALUES('TH', '태국');
commit;

INSERT INTO SPREAD VALUES ('USD', '미국', 50, 90, 10, 1, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('JPY', '일본', 50, 80, 1000, 1000, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('EUR', '유럽', 50, 80, 10, 5, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('HKD', '홍콩', 20, 30, 100, 100, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('THB', '태국', 20, 30, 100, 100, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('SGD', '싱가포르', 20, 30, 10, 10, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('GBP', '영국', 20, 30, 10, 10, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('AUD', '호주', 20, 30, 10, 10, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('CAD', '캐나다', 20, 30, 10, 10, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('CHF', '스위스', 20, 30, 10, 10, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('NZD', '뉴질랜드', 20, 30, 10, 10, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('CNY', '중국', 20, 30, 50, 50, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('SEK', '스웨덴', 20, 30, 100, 100, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('DKK', '덴마크', 20, 30, 50, 50, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('NOK', '노르웨이', 20, 30, 100, 100, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('MYR', '말레이시아', 0, 0, 50, 50, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('TWD', '타이완', 0, 0, 500, 500, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('PHP', '필리핀', 0, 0, 500, 500, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('VND', '베트남', 0, 0, 200000, 200000, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('RUB', '러시아', 0, 0, 500, 500, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
INSERT INTO SPREAD VALUES ('IDR', '인도네시아', 0, 0, 300000, 300000, TO_DATE('20220101 00:00:00', 'YYYYMMdd HH24:MI:SS'), TO_DATE('20221231 23:59:59', 'YYYYMMdd HH24:MI:SS'));
commit;